From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: zhangyuheng <zhangyuheng@lunadeer.cn>
Date: Thu, 22 May 2025 15:33:22 +0800
Subject: [PATCH] Leaves fake player


diff --git a/src/main/java/io/papermc/paper/plugin/manager/PaperEventManager.java b/src/main/java/io/papermc/paper/plugin/manager/PaperEventManager.java
index 7045900a6ac1e1301ced59ca2ed4225af7016f52..3ce4fc4fff2b568e975e796e5d73027fe123ca25 100644
--- a/src/main/java/io/papermc/paper/plugin/manager/PaperEventManager.java
+++ b/src/main/java/io/papermc/paper/plugin/manager/PaperEventManager.java
@@ -48,6 +48,12 @@ class PaperEventManager {
             throw new IllegalStateException(event.getEventName() + " may only be triggered synchronously.");
         }
 
+        // Leaves start - skip bot
+        if (event instanceof org.bukkit.event.player.PlayerEvent playerEvent && playerEvent.getPlayer() instanceof org.leavesmc.leaves.entity.Bot) {
+            return;
+        }
+        // Leaves end - skip bot
+
         // Kaiiju start - Moved up
         // HandlerList handlers = event.getHandlers();
         // RegisteredListener[] listeners = handlers.getRegisteredListeners();
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index a60e6ed437764ebeaab64e9ae7b87a177119e436..8b16a676a7eb3afc5526ca68e351e9c478118574 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -316,6 +316,7 @@ public final class CraftServer implements Server {
     private final io.papermc.paper.logging.SysoutCatcher sysoutCatcher = new io.papermc.paper.logging.SysoutCatcher(); // Paper
     private final io.papermc.paper.potion.PaperPotionBrewer potionBrewer; // Paper - Custom Potion Mixes
     public final io.papermc.paper.SparksFly spark; // Paper - spark
+    private final org.leavesmc.leaves.entity.CraftBotManager botManager; // Leaves
 
     // Paper start - Folia region threading API
     private final io.papermc.paper.threadedregions.scheduler.FoliaRegionScheduler regionizedScheduler = new io.papermc.paper.threadedregions.scheduler.FoliaRegionScheduler(); // Folia - region threading
@@ -493,6 +494,7 @@ public final class CraftServer implements Server {
         }
         this.potionBrewer = new io.papermc.paper.potion.PaperPotionBrewer(console); // Paper - custom potion mixes
         datapackManager = new io.papermc.paper.datapack.PaperDatapackManager(console.getPackRepository()); // Paper
+        this.botManager = new org.leavesmc.leaves.entity.CraftBotManager(); // Leaves
         this.spark = new io.papermc.paper.SparksFly(this); // Paper - spark
     }
 
@@ -1537,7 +1539,7 @@ public final class CraftServer implements Server {
             return false;
         }
 
-        if (handle.players().size() > 0) {
+        if (handle.realPlayers().size() > 0) { // Leaves - skip
             return false;
         }
 
@@ -3340,6 +3342,13 @@ public final class CraftServer implements Server {
     }
     // Paper end
 
+    // Leaves start - Bot API
+    @Override
+    public org.leavesmc.leaves.entity.CraftBotManager getBotManager() {
+        return botManager;
+    }
+    // Leaves end - Bot API
+
     // Paper start - API to check if the server is sleeping
     @Override
     public boolean isPaused() {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index cd6e46fa68c009deb8dfebcecb88e058dfede0b0..f85200c0edd54cc2f6befa0b3544bcff603c79e3 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -237,7 +237,7 @@ public class CraftWorld extends CraftRegionAccessor implements World {
 
     @Override
     public int getPlayerCount() {
-        return world.players().size();
+        return world.realPlayers().size(); // Leaves - skip
     }
 
     @Override
@@ -1254,9 +1254,9 @@ public class CraftWorld extends CraftRegionAccessor implements World {
 
     @Override
     public List<Player> getPlayers() {
-        List<Player> list = new ArrayList<Player>(this.world.players().size());
+        List<Player> list = new ArrayList<Player>(this.world.realPlayers().size()); // Leaves - skip
 
-        for (net.minecraft.world.entity.player.Player human : this.world.players()) {
+        for (net.minecraft.world.entity.player.Player human : this.world.realPlayers()) { // Leaves - skip
             HumanEntity bukkitEntity = human.getBukkitEntity();
 
             if ((bukkitEntity != null) && (bukkitEntity instanceof Player)) {
@@ -1958,7 +1958,7 @@ public class CraftWorld extends CraftRegionAccessor implements World {
     public void playSound(final net.kyori.adventure.sound.Sound sound) {
         org.spigotmc.AsyncCatcher.catchOp("play sound"); // Paper
         final long seed = sound.seed().orElseGet(this.world.getRandom()::nextLong);
-        for (ServerPlayer player : this.getHandle().players()) {
+        for (ServerPlayer player : this.getHandle().realPlayers()) { // Leaves - skip
             player.connection.send(io.papermc.paper.adventure.PaperAdventure.asSoundPacket(sound, player.getX(), player.getY(), player.getZ(), seed, null));
         }
     }
@@ -1986,7 +1986,7 @@ public class CraftWorld extends CraftRegionAccessor implements World {
         org.spigotmc.AsyncCatcher.catchOp("play sound"); // Paper
         final long seed = sound.seed().orElseGet(this.getHandle().getRandom()::nextLong);
         if (emitter == net.kyori.adventure.sound.Sound.Emitter.self()) {
-            for (ServerPlayer player : this.getHandle().players()) {
+            for (ServerPlayer player : this.getHandle().realPlayers()) { // Leaves - skip
                 player.connection.send(io.papermc.paper.adventure.PaperAdventure.asSoundPacket(sound, player, seed, null));
             }
         } else if (emitter instanceof CraftEntity craftEntity) {
@@ -2218,7 +2218,7 @@ public class CraftWorld extends CraftRegionAccessor implements World {
             Preconditions.checkArgument(particle.getDataType().isInstance(data), "data (%s) should be %s", data.getClass(), particle.getDataType());
         }
         this.getHandle().sendParticlesSource(
-                receivers == null ? this.getHandle().players() : receivers.stream().map(player -> ((CraftPlayer) player).getHandle()).collect(java.util.stream.Collectors.toList()), // Paper -  Particle API
+                receivers == null ? this.getHandle().realPlayers() : receivers.stream().map(player -> ((CraftPlayer) player).getHandle()).collect(java.util.stream.Collectors.toList()), // Paper -  Particle API // Leaves - skip
                 sender != null ? ((CraftPlayer) sender).getHandle() : null, // Sender // Paper - Particle API
                 CraftParticle.createParticleParam(particle, data), // Particle
                 force,
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 895695015d21b4ae0ab87ef68d6b3da30f4616c1..7519872943e5b100685785e4b8bececab71f51c3 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -103,6 +103,8 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
             return new CraftHumanEntity(server, (net.minecraft.world.entity.player.Player) entity);
         }
 
+        if (entity instanceof org.leavesmc.leaves.bot.ServerBot bot) { return new org.leavesmc.leaves.entity.CraftBot(server, bot); }
+
         // Special case complex part, since there is no extra entity type for them
         if (entity instanceof EnderDragonPart complexPart) {
             if (complexPart.parentMob instanceof EnderDragon) {
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index bef7a026676ab59a84fc33c8af50ad2b9447fd8c..71ac443a3be74d76b6b088305bc5e6f6b0739929 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -1025,7 +1025,11 @@ public class CraftEventFactory {
         event.setKeepInventory(keepInventory);
         event.setKeepLevel(victim.keepLevel); // SPIGOT-2222: pre-set keepLevel
         populateFields(victim, event); // Paper - make cancellable
-        Bukkit.getServer().getPluginManager().callEvent(event);
+        // Leaves start - disable bot death event
+        if (!(victim instanceof org.leavesmc.leaves.bot.ServerBot)) {
+            Bukkit.getServer().getPluginManager().callEvent(event);
+        }
+        // Leaves end
         // Paper start - make cancellable
         if (event.isCancelled()) {
             return event;
